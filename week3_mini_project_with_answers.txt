1- Install a Centos 7 server. Call it test
2- Make sure to have a seperate partition for /var and /home while installing

3- after installation, add a second disk (2G).

4- create a xfs filesystem on the disk and mount it on /shared

5- Create two groups sales and mkt

6- Create 5 users
   (jill, joe and john)  ... members of mkt
   (sam, susan)          ... members of sales


groupadd mkt
groupadd sales
-----
arr=("sam" "susan" "john" "jill" "joe")
for i in ${arr[@]}
do
 echo "About to add a user $i"  
 useradd $i
done
---------
for i in jill joe john
do
  usermod -aG mkt $i
done
----------
for i in sam susan
do
  usermod -aG sales $i
done



7- Change user sam's shell to ksh
sudo yum install ksh
 
sudo usermod -s /bin/ksh sam

8- change /shared directory group to mkt
   sudo chgrp mkt /shared

   
9- Make sure the files created in /shared take the group of the 
   directory, not that of the owner of the file
   sudo chmod 2775 /shared


10- Install Apache webserver on your new server
    sudo yum install httpd
    
11- Make sure the webserver is using port 8080 instead of port 80
    sudo vim /etc/httpd/conf/httpd.conf
    ==> Change the port number in line 42 to 8080
    ==> :wq
    sudo systemctl restart httpd



12- Make sure that port 8080 is allowed through the firewall
    sudo firewall-cmd --permanent --add-port=8080/tcp
    sudo firewall-cmd --reload

13- Tar up the DocumentRoot of the webserver.
    sudo cd /var/www/html
    sudo touch file{1..10}.txt
    sudo tar cvf /tmp/www.tar *  
    echo "Mini Project" >> /var/www/html/index.html 
    

14- Ensure the user susan has has rwx on the /shared directory
    sudo setfacl -m u:susan:7 /shared
    
15- The Sales department decided that they want the user susan 
    to access /shared directory as /Sales 
    sudo ln -s /shared /Sales

16- Prevent e1000 kernel module from being automatically loaded at system boot time
    If successful, you will notice that enp0s3 and enp0s8 adapter are not available
    because their kernel module did NOT load
   1- lsmod |grep e1000    #You should get the output that e1000 is loaded
   2- dmesg |grep e1000    # Another way to verify that device driver e1000 loaded successfully.
   3- ip a                 #You should see enp0s3 adapter and maybe enp0s8 if you had two adapters.

  Now, the procedure to prevent the kernel module from loading.
  1- vim /etc/modprobe.d/blacklist.conf # Enter the below three lines and save the file.
  # Blacklists e1000
    blacklist e1000
    install e1000 /bin/false

2- Create a backup copy of the current initial ramdisk image before rebuilding:
   cp /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).bak.$(date +%m-%d-%H%M%S).img
   ls -ltr /boot/initramfs-$(uname -r).img*  #To confirm backup file is created.
3- Generate a new initial ramdisk image to reflect the changes:
   dracut -f -v
4- reboot

Verify that the module did not load by running the below commands:
lsmod

Verify that the module did not load by running the below commands:
lsmod |grep e1000
dmesg |grep e1000
ip a

You can read the following link for more details.
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/kernel_administration_guide/chap-documentation-kernel_administration_guide-working_with_kernel_modules#sec-Preventing-kernel-modules-from-being-automatically-loaded-at-system-boot-time





  

17- install the stress package and put someload on the system
    sudo yum install stress 
   sudo stress --cpu 8 --io 4 --vm 2 --vm-bytes 128 --timeout 100s
   On another terminal run "sudo top" to observe the load on the machine.
   also, display the top 8 CPU consuming processes and kill them.
  

18- Ensure the timezone of your server is set that of Tokyo Japan
   sudo timedatectl list-timezones |grep -i tokyo
   sudo timedatectl set-timezone Asia/Tokyo   
   #system-config-date
   #export TZ=Asia/Tokyo
   #cd /etc; ln -s /usr/share/zoneinfo/Asia/Tokyo localtime
   

19- Install the "Mate" Desktop on your server and make sure that Server comes 
    up with GUI after a reboot
   Warning: The following could render your machine unusable to 
            make sure to have it cloned first.
    sudo yum groupinstall "MATE"
    sudo systemctl set-default graphical.target
    sudo systemctl get-default
 

20-  Add another interface on your Machine and put a static IP on it.
     use the VirtualBOX Manager for adding the NIC
     and use nmtui for adding the static IP


21- What device driver is your interface using?
    sudo ethtool -i <interface name>
    or
    sudo lshw -c network

22- Copy the file /etc/hosts from your local machine to the atlanta server's /tmp/ directory
Atlanata server IP address is: 45.32.212.147
  
rsync -avz /etc/hosts stdnt16@45.32.212.147:/tmp

See link below if using not standard ssh port.
https://linuxhint.com/rsync-non-standard-port/

23- Look for any syslog kernel messages for log level error and higher
    sudo dmesg -f kern -l err
    journalctl -b -1 -p err  # https://www.thegeeksearch.com/troubleshooting-booting-issues-in-centos-rhel-7-and-8/

24- Make sure the system comes up NON GUI after a reboot even if GUI is installed
    systemctl set-default multi-user.target


The below Task is optional
25- We finally decided to prepare this server for Oracle DB installation.
But before we do that, the System Engineer will have to install
Oracle's ASM filesystem so that the DBA can use ASM type filesytem.
- Download and install driver for ASM kernel Module.
    --------------------------------------------------
    a- Download driver
    sudo yum install kmod-oracleasm --downloadonly --downloaddir=/tmp/drivers

   b- cd /tmp/drivers ; ls
(you should see one RPM in that directory)

  c- sudo yum install kmod-oracleasm-2.0.8-19.e17.x86_64.rpm 
     (make sure that that is the correct name of the rpm. your package version might be different)

  d- To update the systems list of all modules and dependancies
      sudo depmod -a

  e- Because this driver needs to be loaded during bootup then
     the Initial ram disk needs to be updated.
     -First let us make a backup of the current initial ramdisk
      sudo cp /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak
  f- ls -l /boot
     you should see your backup initialram disk.

  g- Now let us create a new initial ramdisk using dracut. Note we are not using mkinitrd
     sudo dracut -f -v
or
    dracut -f -v /boot/initramfs-$(uname -r).img $(uname -r) 
     The last line of the output will show you the newly created initial ramdisk.

  h- now let us list the contents of the newly created initial ramdisk
     sudo lsinitrd
